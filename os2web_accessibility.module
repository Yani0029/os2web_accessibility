<?php
/**
 * @file
 * os2web_accessibility.module
 * @author Yani Xu <yx@bellcom.dk>
 *
 */

/**
 * Implements hook_menu().
 */
function os2web_accessibility_menu() {
  $items['admin/config/os2web/handicap'] = array(
    'title' => 'Handicap settings',
    'description' => t('Setting for handicap pages'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('os2web_accessibility_setting_form'),
    'access arguments' => array('administer site configuration'),
  );
  $items['handicap'] = array(
    'title' => 'Handicap side',
    'page callback' => 'os2web_accessibility_frontpage',
    'page arguments' => array(1),
    'access callback' => TRUE,
    //'type' => MENU_SUGGESTED_ITEM,
  );
  return $items;
}
/**
 * Menu callback; presents the handicap settings page.
 */
function os2web_accessibility_setting_form() {
  $form['os2web_accessibility_setting'] = array(
    '#type' => 'fieldset',
    '#title' => t('Handicap frontpage'),
  );
  $form['os2web_accessibility_setting']['os2web_accessibility_node_content'] = array(
    '#type' => 'textfield',
    '#title' => t('Handicap node id'),
    '#default_value' => variable_get('os2web_accessibility_node_content'),
    '#size' => 3,
    '#maxlength' => 10,
    '#description' => t('Specify which node content show be then handicap front page.'),
  );
  $menu_options = array();
  $menu_options = menu_get_menus();

  $form['os2web_accessibility_setting']['os2web_accessibility_show_menus'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Menus to include in the handicap frontpage'),
    '#default_value' => variable_get('os2web_accessibility_show_menus', array()),
    '#options' => $menu_options,
    '#multiple' => TRUE,
  );
  return system_settings_form($form);
}

function os2web_accessibility_frontpage($nid = '') {
  $nid_setting = variable_get('os2web_accessibility_node_content',18);
  global $base_url;

  // Goto handicap node page.
  if ($nid != "") {
    $print_node_id = $nid;
  }
  // Goto handicap frontpage - node + menus.
  else {
    $print_node_id = $nid_setting;
  }
  // Handle the query
  $query = $_GET;
  unset($query['q']);

  module_load_include('inc', 'print', 'print.pages');

  $print = print_controller($print_node_id, $query, $cid, PRINT_HTML_FORMAT);

  if ($print !== FALSE) {
    $node = $print['node'];
    $output = os2web_accessibility_site_map_menus();

    $html = theme('print', array('print' => $print, 'type' => PRINT_HTML_FORMAT, 'node' => $node));
    drupal_add_http_header('Content-Type', 'text/html; charset=utf-8');
    drupal_send_headers();
    // delete print window open and close.
    $html = str_replace("window.print();","",$html);
    $html = str_replace("window.close();","",$html);
    $html = str_replace('<div class="print-footer">',"$output <div class='print-footer'>",$html);
    print $html;
  }

}

/**
 * Render the latest maps for all the menus.
 *
 * @return string
 *   Returns HTML string of site map for menus.
 */
function os2web_accessibility_site_map_menus() {
  $mids = array_filter(variable_get('os2web_accessibility_show_menus', array()));

  if (!empty($mids)) {
    foreach ($mids as $mid) {
      $class = array();
      $menu = menu_load($mid);
      // Use menu_tree_all_data to retrieve the expanded tree.
      $tree = menu_tree_all_data($mid);

      if (module_exists('i18n_menu')) {
        //$tree = i18n_menu_localize_tree($tree, $GLOBALS['language']->language);
      }

      // Add an alter hook so other modules can manipulate the menu tree prior to rendering
      $tree_1 = os2web_accessibility_menu_link_add_handicap($tree);
      $menu_display = menu_tree_output($tree_1);

      $menu_html .= drupal_render($menu_display);
      //print_r($menu_html);
      if (!empty($menu_html)) {}
    }
  }

  return $menu_html;
}
function os2web_accessibility_menu_link_add_handicap($tree = array()){
  foreach ($tree as $i =>$link) {
    foreach ($link as $key => $value) {
      foreach ($value as $name => $v) {
        if ($name == 'href') {
          $pos = substr($v,0,4);
          if($pos === 'node') {
            $link_value = str_replace('node/','handicap/',$v);
          }
          else {
            $link_value = "handicap/".$v;
          }
          $tree[$i][$key][$name] = $link_value;
        }
      }
      if($key == 'below' && !empty($key)) {
         $tree[$i][$key] = os2web_accessibility_menu_link_add_handicap($value);
      }
    }
  }
  return $tree;
}

function os2web_accessibility_js_alter(&$javascript) {
  //$path = current_path();
  //$path = explode("/",$path);
 // if ($path[0] == 'handicap') {
    //unset($javascript['path/to/script.js']);
  //}
}
